---
import { SITE_TITLE } from "../consts";
import MainLayout from "../layouts/MainLayout.astro";
---

<MainLayout title={SITE_TITLE}>
  <main>
    <h2 id="searchTitle" class="text-3xl text-default text-center"></h2>
    <ul
      aria-label="Search Results"
      id="searchResults"
      class="py-10 border-y border-default"
    >
    </ul>
  </main>
</MainLayout>

<script>
  import DOMPurify from "dompurify";
  import { SITE_TITLE } from "../consts";

  let SEARCH_DATA: any;

  const search: HTMLInputElement = document.querySelector("#search")!;
  const searchTitle: Element = document.querySelector("#searchTitle")!;
  const resultsList: Element = document.querySelector("#searchResults")!;

  // functions
  function updateDocumentTitle(search: string) {
    document.title = search ? `${SITE_TITLE} | Search “${search}”` : SITE_TITLE;
  }

  function updateSearchTitle(search: string) {
    const searchText = search ? `Search：${search}` : "";
    searchTitle.textContent = searchText;
  }

  const generateSearchList = (results: any, search: string) => {
    return results
      .map((r: any) => {
        const { title, date, slug } = r;
        const dateAsDate = new Date(date);
        return `<li class="py-4 px-[4vw]">
								<time datetime="${dateAsDate.toISOString()}">
									${dateAsDate.toLocaleDateString("en-us", {
                    year: "numeric",
                    month: "short",
                    day: "numeric",
                  })}
								</time>
								<a href="/astro-blog/blog/${slug}/">${title}</a>
							</li>`;
      })
      .join("");
  };

  async function fetchSearchResults(search: string) {
    if (search?.length === 0) return;
    if (!SEARCH_DATA) {
      try {
        const res = await fetch("/astro-blog/search.json");

        if (!res.ok) {
          throw new Error("Something went wrong…please try again");
        }
        const data = await res.json();

        SEARCH_DATA = data;
      } catch (e) {
        console.error(e);
      }
    }

    const list = SEARCH_DATA.filter((s: any) => {
      return s.title.toLowerCase().includes(search.toLowerCase());
    });
    resultsList!.innerHTML =
      list?.length > 0
        ? generateSearchList(list, search)
        : `
      <div class="border-default py-10 px-[4vw]"><p>目前沒有關於 ${search} 主題的文章哦！</p></div>
      `;
  }

  // event listeners
  window.addEventListener("DOMContentLoaded", () => {
    const urlParams = DOMPurify.sanitize(
      new URLSearchParams(window.location.search).get("q")
    );

    fetchSearchResults(urlParams);
    updateDocumentTitle(urlParams);
    updateSearchTitle(urlParams);
    search.value = urlParams;
    search.focus();
  });
</script>
